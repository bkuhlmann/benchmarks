#! /usr/bin/env ruby
# frozen_string_literal: true

require "bundler/inline"

gemfile true do
  source "https://rubygems.org"

  gem "benchmark-ips"
end

CONSTANTS = Hash.new

module Constants
  1_000.times { |index| CONSTANTS["EXAMPLE_#{index}"] = const_set "EXAMPLE_#{index}", index }
end

Benchmark.ips do |benchmark|
  benchmark.config time: 5, warmup: 2

  benchmark.report("#[]") { CONSTANTS["EXAMPLE_666"] }
  benchmark.report("Module.get (symbol)") { Constants.const_get :EXAMPLE_666 }
  benchmark.report("Module.get (string)") { Constants.const_get "EXAMPLE_666" }
  benchmark.report("Object.get") { Object.const_get "Constants::EXAMPLE_666" }

  benchmark.compare!
end

__END__

ruby 3.3.0 (2023-12-25 revision 5124f9ac75) +YJIT [arm64-darwin23.4.0]
Warming up --------------------------------------
                 #[]     3.380M i/100ms
 Module.get (symbol)     3.491M i/100ms
 Module.get (string)     1.706M i/100ms
          Object.get     1.068M i/100ms
Calculating -------------------------------------
                 #[]     44.355M (± 0.2%) i/s -    223.075M in   5.029360s
 Module.get (symbol)     44.370M (± 0.1%) i/s -    223.435M in   5.035747s
 Module.get (string)     18.818M (± 0.5%) i/s -     95.510M in   5.075490s
          Object.get     11.076M (± 0.3%) i/s -     55.527M in   5.013445s

Comparison:
 Module.get (symbol): 44369850.1 i/s
                 #[]: 44354632.8 i/s - same-ish: difference falls within error
 Module.get (string): 18818346.2 i/s - 2.36x  slower
          Object.get: 11075724.0 i/s - 4.01x  slower
