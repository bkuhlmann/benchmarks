#! /usr/bin/env ruby
# frozen_string_literal: true

require "bundler/inline"

gemfile true do
  source "https://rubygems.org"

  gem "benchmark-ips"
end

CONSTANTS = Hash.new

module Constants
  1_000.times { |index| CONSTANTS["EXAMPLE_#{index}"] = const_set "EXAMPLE_#{index}", index }
end

Benchmark.ips do |benchmark|
  benchmark.config time: 5, warmup: 2

  benchmark.report("#[]") { CONSTANTS["EXAMPLE_666"] }
  benchmark.report("Module.get (symbol)") { Constants.const_get :EXAMPLE_666 }
  benchmark.report("Module.get (string)") { Constants.const_get "EXAMPLE_666" }
  benchmark.report("Object.get") { Object.const_get "Constants::EXAMPLE_666" }

  benchmark.compare!
end

__END__

ruby 3.3.0 (2023-12-25 revision 5124f9ac75) +YJIT [arm64-darwin22.6.0]
Warming up --------------------------------------
                 #[]     1.813M i/100ms
 Module.get (symbol)     1.961M i/100ms
 Module.get (string)     1.068M i/100ms
          Object.get   734.137k i/100ms
Calculating -------------------------------------
                 #[]     32.213M (± 1.8%) i/s -    161.350M in   5.010440s
 Module.get (symbol)     32.696M (± 1.4%) i/s -    164.717M in   5.038892s
 Module.get (string)     14.125M (± 2.0%) i/s -     71.568M in   5.068803s
          Object.get      8.708M (± 0.9%) i/s -     44.048M in   5.058943s

Comparison:
 Module.get (symbol): 32695695.0 i/s
                 #[]: 32213332.8 i/s - same-ish: difference falls within error
 Module.get (string): 14124876.2 i/s - 2.31x  slower
          Object.get:  8707737.9 i/s - 3.75x  slower
