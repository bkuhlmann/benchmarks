#! /usr/bin/env ruby
# frozen_string_literal: true

require "bundler/inline"

gemfile true do
  source "https://rubygems.org"

  gem "benchmark-ips"
end

require "delegate"
require "forwardable"

module Echo
  def self.call(message) = message
end

class ForwardExample
  def initialize operation
    @operation = operation
  end

  def call(...) = operation.call(...)

  private

  attr_reader :operation
end

class DelegateExample
  extend Forwardable

  delegate %i[call] => :operation

  def initialize operation
    @operation = operation
  end

  private

  attr_reader :operation
end

class SimpleExample < SimpleDelegator
end

class ClassExample < DelegateClass Echo
end

message = "A test."
forward_example = ForwardExample.new Echo
deletate_example = DelegateExample.new Echo
simple_example = SimpleExample.new Echo
class_example = ClassExample.new Echo

Benchmark.ips do |benchmark|
  benchmark.config time: 5, warmup: 2

  benchmark.report("Forward") { forward_example.call message }
  benchmark.report("Delegate") { deletate_example.call message }
  benchmark.report("Simple Delegator") { simple_example.call message }
  benchmark.report("Delegate Class") { class_example.call message }

  benchmark.compare!
end

__END__

Warming up --------------------------------------
             Forward   802.243k i/100ms
            Delegate   751.834k i/100ms
    Simple Delegator   293.331k i/100ms
      Delegate Class   293.194k i/100ms
Calculating -------------------------------------
             Forward      9.589M (± 1.8%) i/s -     48.135M in   5.021311s
            Delegate      9.028M (± 1.9%) i/s -     45.862M in   5.081941s
    Simple Delegator      2.953M (± 1.1%) i/s -     14.960M in   5.067414s
      Delegate Class      2.943M (± 1.1%) i/s -     14.953M in   5.080761s

Comparison:
             Forward:  9589223.5 i/s
            Delegate:  9027672.8 i/s - 1.06x  slower
    Simple Delegator:  2952504.1 i/s - 3.25x  slower
      Delegate Class:  2943411.2 i/s - 3.26x  slower
